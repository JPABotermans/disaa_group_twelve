Select C.CourseName, coursreg.Grade from CourseRegistrations as coursreg, Courses as C, CourseOffers as CO,  (select StudentRegistrationId, StudentId, DegreeId from StudentRegistrationsToDegrees where StudentId = %1% and DegreeId = %2%) as reg where coursreg.StudentRegistrationID = reg.StudentRegistrationID and Grade > 4 and coursreg.CourseOfferId = CO.CourseOfferId and CO.CourseId = C.CourseId order by Year, Quartile, CO.CourseId;
select 0;
select FemaleActive.DegreeId, (FemaleActive.totfem/TotalActive.totStud) as percentage from (select D.DegreeId, count(StudentId)+0.0 as totfem from GPAperStudentRegistrationId as short, Degrees as D where short.DegreeId = D.degreeId and short.totECTS < D.TotalECTS and short.totECTS >0 and Gender = 'F' group by D.DegreeId) as FemaleActive, (select D.DegreeId, count(StudentId)+0.0 as totStud from GPAperStudentRegistrationId as short, Degrees as D where short.DegreeId = D.degreeId and short.totECTS < D.TotalECTS and short.totECTS >0 group by D.DegreeId) as TotalActive where FemaleActive.DegreeId = TotalActive.DegreeId order by DegreeId;
select (femalecount/(malecount+femalecount)) as percentage from (SELECT count(Students.StudentId)+0.0 as femalecount FROM Degrees, StudentRegistrationsToDegrees, Students where Dept=%1% and Degrees.DegreeId=StudentRegistrationsToDegrees.DegreeId AND StudentRegistrationsToDegrees.StudentId=Students.StudentId AND Gender='F') as t1, (SELECT count(Students.StudentId)+0.0 as malecount FROM Degrees, StudentRegistrationsToDegrees, Students where Dept=%1% and Degrees.DegreeId=StudentRegistrationsToDegrees.DegreeId AND StudentRegistrationsToDegrees.StudentId=Students.StudentId AND Gender='M') as t2;
select 0;
select 0;
select short.DegreeId, BirthyearStudent, Gender, avg(short.GPA) as avgGrade from GPAperStudentRegistrationId as short, Degrees as D where short.DegreeId = D.DegreeId and short.TotECTS < D.TotalECTS GROUP BY CUBE(short.DegreeId, BirthyearStudent, Gender) ORDER BY short.DegreeId asc, BirthyearStudent, Gender;
Select CourseName, Year, Quartile from (select CourseOfferId, count(StudentRegistrationId)+0.0 as tutorcount from StudentAssistants group by CourseOfferId) as tutors,  (select CourseOfferId, count(StudentRegistrationId)+0.0 as studentcount from CourseRegistrations group by CourseOfferId) as students, CourseOffers as CO, Courses as C where tutors.CourseOfferId = students.CourseOfferId and students.CourseOfferId = CO.courseofferid and CO.CourseId = C.CourseId and (students.studentcount/tutors.tutorcount) > 50 order by students.CourseOfferId;
